class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:                                   
    def __init__(self):
        self.head = None

    def append(self, data):
        """Add a new node with the given data to the end of the list."""
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    def remove_first(self):
        """Remove the first node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove first element.")
            return
        self.head = self.head.next

    def remove_last(self):
        """Remove the last node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove last element.")
            return
        if self.head.next is None:
            self.head = None
            return
        second_last = self.head
        while second_last.next.next:
            second_last = second_last.next
        second_last.next = None

    def clear(self):
        """Clear the entire list."""
        self.head = None

    def display(self):
        """Display the linked list."""
        current = self.head
        if not current:
            print("List is empty.")
            return
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

# Example usage
if __name__ == "__main__":
    # Create a linked list and add 5 elements
    linked_list = LinkedList()
    for i in range(1, 6):
        linked_list.append(i)

    print("Initial list:")
    linked_list.display()

    # Remove the first element
    print("\nRemoving the first element:")
    linked_list.remove_first()
    linked_list.display()

    # Remove the last element
    print("\nRemoving the last element:")
    linked_list.remove_last()
    linked_list.display()

    # Clear the list
    print("\nClearing the list:")
    linked_list.clear()
    linked_list.display()class Node:        
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        """Add a new node with the given data to the end of the list."""
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    def remove_first(self):
        """Remove the first node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove first element.")
            return
        self.head = self.head.next

    def remove_last(self):
        """Remove the last node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove last element.")
            return
        if self.head.next is None:
            self.head = None
            return
        second_last = self.head
        while second_last.next.next:
            second_last = second_last.next
        second_last.next = None

    def clear(self):
        """Clear the entire list."""
        self.head = None

    def display(self):
        """Display the linked list."""
        current = self.head
        if not current:
            print("List is empty.")
            return
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

# Example usage
if __name__ == "__main__":
    # Create a linked list and add 5 elements
    linked_list = LinkedList()
    for i in range(1, 6):
        linked_list.append(i)

    print("Initial list:")
    linked_list.display()

    # Remove the first element
    print("\nRemoving the first element:")
    linked_list.remove_first()
    linked_list.display()

    # Remove the last element
    print("\nRemoving the last element:")
    linked_list.remove_last()
    linked_list.display()

    # Clear the list
    print("\nClearing the list:")
    linked_list.clear()
    linked_list.display()class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        """Add a new node with the given data to the end of the list."""
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        last_node = self.head
        while last_node.next:
            last_node = last_node.next
        last_node.next = new_node

    def remove_first(self):
        """Remove the first node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove first element.")
            return
        self.head = self.head.next

    def remove_last(self):
        """Remove the last node from the list."""
        if self.head is None:
            print("List is empty. Cannot remove last element.")
            return
        if self.head.next is None:
            self.head = None
            return
        second_last = self.head
        while second_last.next.next:
            second_last = second_last.next
        second_last.next = None

    def clear(self):
        """Clear the entire list."""
        self.head = None

    def display(self):
        """Display the linked list."""
        current = self.head
        if not current:
            print("List is empty.")
            return
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

# Example usage
if __name__ == "__main__":
    # Create a linked list and add 5 elements
    linked_list = LinkedList()
    for i in range(1, 6):
        linked_list.append(i)

    print("Initial list:")
    linked_list.display()

    # Remove the first element
    print("\nRemoving the first element:")
    linked_list.remove_first()
    linked_list.display()

    # Remove the last element
    print("\nRemoving the last element:")
    linked_list.remove_last()
    linked_list.display()

    # Clear the list
    print("\nClearing the list:")
    linked_list.clear()
    linked_list.display()